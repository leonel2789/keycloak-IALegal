version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: PgDb!2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak-network
    restart: unless-stopped
    # Resource limits para evitar OOM
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.3
    environment:
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: PgDb!2025

      # Keycloak admin user
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: KcAdm!n2025

      # PRODUCCIÓN - Configuración optimizada
      KC_HOSTNAME: keycloak.nilosolutions.com
      KC_HTTP_PORT: 8080
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_BACKCHANNEL: false

      # Logging
      KC_LOG_LEVEL: INFO
      KC_LOG_CONSOLE_OUTPUT: json

      # Cache y rendimiento
      KC_CACHE: ispn
      KC_CACHE_STACK: kubernetes

      # JVM Options para mejor rendimiento (sin conflictos de GC)
      JAVA_OPTS_APPEND: >-
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -Djava.net.preferIPv4Stack=true

    volumes:
      - ./realm-config:/opt/keycloak/data/import
      - ./themes:/opt/keycloak/themes
    ports:
      - "8085:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak-network
    restart: unless-stopped

    # Resource limits (IMPORTANTE para evitar 504)
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

    # Health check (CRÍTICO para Coolify/Traefik)
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

    # MODO PRODUCCIÓN (NO start-dev)
    command:
      - start
      - --optimized
      - --import-realm

volumes:
  postgres_data:

networks:
  keycloak-network:
    driver: bridge
